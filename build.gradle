plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.8.1"
}

group 'guru.qa.allure'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def allureVersion = "2.14.0",
    selenideVersion = "5.24.0",
    junitVersion = "5.8.1",
    ownerVersion = "1.0.4",
    javafakerVersion = "1.0.2",
    aspectjweaverVersion = "1.9.7",
    slf4jVersion = "1.7.29"

allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:$aspectjweaverVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "com.github.javafaker:javafaker:$javafakerVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()


    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
    }

